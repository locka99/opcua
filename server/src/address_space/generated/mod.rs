// OPCUA for Rust
// SPDX-License-Identifier: MPL-2.0
// Copyright (C) 2017-2020 Adam Lock

// This file was autogenerated by tools/schema/gen_address_space.js
// DO NOT EDIT THIS FILE
#![rustfmt::skip]

use crate::address_space::types::AddressSpace;

mod nodeset_3_1;
mod nodeset_3_2;
mod nodeset_4_1;
mod nodeset_4_2;
mod nodeset_4_3;
mod nodeset_4_4;
mod nodeset_4_5;
mod nodeset_4_6;
mod nodeset_4_7;
mod nodeset_4_8;
mod nodeset_5_1;
mod nodeset_5_2;
mod nodeset_5_3;
mod nodeset_5_4;
mod nodeset_5_5;
mod nodeset_5_6;
mod nodeset_5_7;
mod nodeset_5_8;
mod nodeset_5_9;
mod nodeset_5_10;
mod nodeset_5_11;
mod nodeset_5_12;
mod nodeset_5_13;
mod nodeset_5_14;
mod nodeset_5_15;
mod nodeset_5_16;
mod nodeset_8;
mod nodeset_9_1;
mod nodeset_9_2;
mod nodeset_9_3;
mod nodeset_9_4;
mod nodeset_10;
mod nodeset_11;
mod nodeset_12_1;
mod nodeset_12_2;
mod nodeset_12_3;
mod nodeset_13;
mod nodeset_14_1;
mod nodeset_14_2;
mod nodeset_14_3;
mod nodeset_14_4;
mod nodeset_14_5;
mod nodeset_14_6;
mod nodeset_14_7;
mod nodeset_14_8;
mod nodeset_14_9;
mod nodeset_14_10;
mod nodeset_14_11;
mod nodeset_999;

/// Populates the address space with all defined node sets
pub fn populate_address_space(address_space: &mut AddressSpace) {
    nodeset_3_1::populate_address_space(address_space);
    nodeset_3_2::populate_address_space(address_space);
    nodeset_4_1::populate_address_space(address_space);
    nodeset_4_2::populate_address_space(address_space);
    nodeset_4_3::populate_address_space(address_space);
    nodeset_4_4::populate_address_space(address_space);
    nodeset_4_5::populate_address_space(address_space);
    nodeset_4_6::populate_address_space(address_space);
    nodeset_4_7::populate_address_space(address_space);
    nodeset_4_8::populate_address_space(address_space);
    nodeset_5_1::populate_address_space(address_space);
    nodeset_5_2::populate_address_space(address_space);
    nodeset_5_3::populate_address_space(address_space);
    nodeset_5_4::populate_address_space(address_space);
    nodeset_5_5::populate_address_space(address_space);
    nodeset_5_6::populate_address_space(address_space);
    nodeset_5_7::populate_address_space(address_space);
    nodeset_5_8::populate_address_space(address_space);
    nodeset_5_9::populate_address_space(address_space);
    nodeset_5_10::populate_address_space(address_space);
    nodeset_5_11::populate_address_space(address_space);
    nodeset_5_12::populate_address_space(address_space);
    nodeset_5_13::populate_address_space(address_space);
    nodeset_5_14::populate_address_space(address_space);
    nodeset_5_15::populate_address_space(address_space);
    nodeset_5_16::populate_address_space(address_space);
    nodeset_8::populate_address_space(address_space);
    nodeset_9_1::populate_address_space(address_space);
    nodeset_9_2::populate_address_space(address_space);
    nodeset_9_3::populate_address_space(address_space);
    nodeset_9_4::populate_address_space(address_space);
    nodeset_10::populate_address_space(address_space);
    nodeset_11::populate_address_space(address_space);
    nodeset_12_1::populate_address_space(address_space);
    nodeset_12_2::populate_address_space(address_space);
    nodeset_12_3::populate_address_space(address_space);
    nodeset_13::populate_address_space(address_space);
    nodeset_14_1::populate_address_space(address_space);
    nodeset_14_2::populate_address_space(address_space);
    nodeset_14_3::populate_address_space(address_space);
    nodeset_14_4::populate_address_space(address_space);
    nodeset_14_5::populate_address_space(address_space);
    nodeset_14_6::populate_address_space(address_space);
    nodeset_14_7::populate_address_space(address_space);
    nodeset_14_8::populate_address_space(address_space);
    nodeset_14_9::populate_address_space(address_space);
    nodeset_14_10::populate_address_space(address_space);
    nodeset_14_11::populate_address_space(address_space);
    nodeset_999::populate_address_space(address_space);
}
